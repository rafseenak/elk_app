plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}
def flutterCompileSdkVersion = localProperties.getProperty('flutter.compileSdkVersion')?.toInteger() ?: 34
def flutterMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion')?.toInteger() ?: 23
def flutterTargetSdkVersion = localProperties.getProperty('flutter.targetSdkVersion')?.toInteger() ?: 34
def flutterVersionCode = localProperties.getProperty('flutter.versionCode')?.toInteger() ?: 1
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.infinitelab.elk"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.infinitelab.elk"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode
        versionName flutterVersionName 
    }
    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // signingConfig signingConfigs.debug
            signingConfig = signingConfigs.release
            shrinkResources false
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation("com.google.android.material:material:1.12.0")
}
